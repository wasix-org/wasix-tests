#!/usr/bin/env bash
set -euo pipefail

# Detect if we are clang or clang++
if [[ "$0" =~ "++" ]]; then
    NATIVE_COMPILER="em++"
else
    NATIVE_COMPILER="emcc"
fi

ARGS=(
    "$@"
    "-fPIC"
)

# Analyze the arguments
# Check if we are also linking
run_linker=true
# We are building a shared library
shared_library=false
for arg in "${ARGS[@]}"; do
    case "$arg" in
        -c|-S|-E)
            run_linker=false
            ;;
        -shared|--shared)
            shared_library=true
            ;;
    esac
done

if $run_linker; then
    ARGS+=(
        "-sEXIT_RUNTIME"
    )
    if $shared_library; then
        ARGS+=(
            "-sSIDE_MODULE=1"
        )
    else
        ARGS+=(
            "-sMAIN_MODULE=1"
        )
    fi
fi

# Copied from wasix-clang to strip unsupported linker args
UNSUPPORTED_LINKER_ARGS=(
    --end-group
    --start-group
    --as-needed
    --no-as-needed
    --allow-shlib-undefined
    --enable-new-dtags
    # Version script is not supported by wasm-ld
    "--version-script=*([^,])"
    "--version-script,*([^,])"
    # Stats not supported by wasm-ld
    "*-stats"
)
FILTERED_ARGS=( )
for arg in "${ARGS[@]}"; do
    # Filter unsupported linker arguments
    if [[ "$arg" = "-Wl,"* ]]; then
        for unsupported_linker_arg in "${UNSUPPORTED_LINKER_ARGS[@]}"; do
            arg="${arg//,$unsupported_linker_arg/}"
        done
        [[ "$arg" == "-Wl" ]] && continue || true
    fi

    # Add all other arguments to our filtered list
    FILTERED_ARGS+=("$arg")
done

set -x
exec "$NATIVE_COMPILER" "${FILTERED_ARGS[@]}"